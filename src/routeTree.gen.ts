/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const WaiterMonitorLazyRouteImport = createFileRoute('/waiter-monitor')()
const OverviewLazyRouteImport = createFileRoute('/overview')()
const ManageTablesLazyRouteImport = createFileRoute('/manage-tables')()
const ManageProductsLazyRouteImport = createFileRoute('/manage-products')()
const LoginLazyRouteImport = createFileRoute('/login')()
const KitchenLazyRouteImport = createFileRoute('/kitchen')()
const DashboardLazyRouteImport = createFileRoute('/dashboard')()
const IndexLazyRouteImport = createFileRoute('/')()
const ProductsAddLazyRouteImport = createFileRoute('/products/add')()
const CloseBillCodeLazyRouteImport = createFileRoute('/close-bill/$code')()
const CashRegisterCloseLazyRouteImport = createFileRoute(
  '/cash-register/close',
)()

const WaiterMonitorLazyRoute = WaiterMonitorLazyRouteImport.update({
  id: '/waiter-monitor',
  path: '/waiter-monitor',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/waiter-monitor.lazy').then((d) => d.Route),
)
const OverviewLazyRoute = OverviewLazyRouteImport.update({
  id: '/overview',
  path: '/overview',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/overview.lazy').then((d) => d.Route))
const ManageTablesLazyRoute = ManageTablesLazyRouteImport.update({
  id: '/manage-tables',
  path: '/manage-tables',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/manage-tables.lazy').then((d) => d.Route))
const ManageProductsLazyRoute = ManageProductsLazyRouteImport.update({
  id: '/manage-products',
  path: '/manage-products',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/manage-products.lazy').then((d) => d.Route),
)
const LoginLazyRoute = LoginLazyRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))
const KitchenLazyRoute = KitchenLazyRouteImport.update({
  id: '/kitchen',
  path: '/kitchen',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/kitchen.lazy').then((d) => d.Route))
const DashboardLazyRoute = DashboardLazyRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/dashboard.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const ProductsAddLazyRoute = ProductsAddLazyRouteImport.update({
  id: '/products/add',
  path: '/products/add',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/products.add.lazy').then((d) => d.Route))
const CloseBillCodeLazyRoute = CloseBillCodeLazyRouteImport.update({
  id: '/close-bill/$code',
  path: '/close-bill/$code',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/close-bill.$code.lazy').then((d) => d.Route),
)
const CashRegisterCloseLazyRoute = CashRegisterCloseLazyRouteImport.update({
  id: '/cash-register/close',
  path: '/cash-register/close',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/cash-register.close.lazy').then((d) => d.Route),
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/kitchen': typeof KitchenLazyRoute
  '/login': typeof LoginLazyRoute
  '/manage-products': typeof ManageProductsLazyRoute
  '/manage-tables': typeof ManageTablesLazyRoute
  '/overview': typeof OverviewLazyRoute
  '/waiter-monitor': typeof WaiterMonitorLazyRoute
  '/cash-register/close': typeof CashRegisterCloseLazyRoute
  '/close-bill/$code': typeof CloseBillCodeLazyRoute
  '/products/add': typeof ProductsAddLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/kitchen': typeof KitchenLazyRoute
  '/login': typeof LoginLazyRoute
  '/manage-products': typeof ManageProductsLazyRoute
  '/manage-tables': typeof ManageTablesLazyRoute
  '/overview': typeof OverviewLazyRoute
  '/waiter-monitor': typeof WaiterMonitorLazyRoute
  '/cash-register/close': typeof CashRegisterCloseLazyRoute
  '/close-bill/$code': typeof CloseBillCodeLazyRoute
  '/products/add': typeof ProductsAddLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/kitchen': typeof KitchenLazyRoute
  '/login': typeof LoginLazyRoute
  '/manage-products': typeof ManageProductsLazyRoute
  '/manage-tables': typeof ManageTablesLazyRoute
  '/overview': typeof OverviewLazyRoute
  '/waiter-monitor': typeof WaiterMonitorLazyRoute
  '/cash-register/close': typeof CashRegisterCloseLazyRoute
  '/close-bill/$code': typeof CloseBillCodeLazyRoute
  '/products/add': typeof ProductsAddLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/kitchen'
    | '/login'
    | '/manage-products'
    | '/manage-tables'
    | '/overview'
    | '/waiter-monitor'
    | '/cash-register/close'
    | '/close-bill/$code'
    | '/products/add'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/kitchen'
    | '/login'
    | '/manage-products'
    | '/manage-tables'
    | '/overview'
    | '/waiter-monitor'
    | '/cash-register/close'
    | '/close-bill/$code'
    | '/products/add'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/kitchen'
    | '/login'
    | '/manage-products'
    | '/manage-tables'
    | '/overview'
    | '/waiter-monitor'
    | '/cash-register/close'
    | '/close-bill/$code'
    | '/products/add'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  DashboardLazyRoute: typeof DashboardLazyRoute
  KitchenLazyRoute: typeof KitchenLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  ManageProductsLazyRoute: typeof ManageProductsLazyRoute
  ManageTablesLazyRoute: typeof ManageTablesLazyRoute
  OverviewLazyRoute: typeof OverviewLazyRoute
  WaiterMonitorLazyRoute: typeof WaiterMonitorLazyRoute
  CashRegisterCloseLazyRoute: typeof CashRegisterCloseLazyRoute
  CloseBillCodeLazyRoute: typeof CloseBillCodeLazyRoute
  ProductsAddLazyRoute: typeof ProductsAddLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/waiter-monitor': {
      id: '/waiter-monitor'
      path: '/waiter-monitor'
      fullPath: '/waiter-monitor'
      preLoaderRoute: typeof WaiterMonitorLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/overview': {
      id: '/overview'
      path: '/overview'
      fullPath: '/overview'
      preLoaderRoute: typeof OverviewLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage-tables': {
      id: '/manage-tables'
      path: '/manage-tables'
      fullPath: '/manage-tables'
      preLoaderRoute: typeof ManageTablesLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage-products': {
      id: '/manage-products'
      path: '/manage-products'
      fullPath: '/manage-products'
      preLoaderRoute: typeof ManageProductsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/kitchen': {
      id: '/kitchen'
      path: '/kitchen'
      fullPath: '/kitchen'
      preLoaderRoute: typeof KitchenLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/add': {
      id: '/products/add'
      path: '/products/add'
      fullPath: '/products/add'
      preLoaderRoute: typeof ProductsAddLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/close-bill/$code': {
      id: '/close-bill/$code'
      path: '/close-bill/$code'
      fullPath: '/close-bill/$code'
      preLoaderRoute: typeof CloseBillCodeLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cash-register/close': {
      id: '/cash-register/close'
      path: '/cash-register/close'
      fullPath: '/cash-register/close'
      preLoaderRoute: typeof CashRegisterCloseLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  DashboardLazyRoute: DashboardLazyRoute,
  KitchenLazyRoute: KitchenLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  ManageProductsLazyRoute: ManageProductsLazyRoute,
  ManageTablesLazyRoute: ManageTablesLazyRoute,
  OverviewLazyRoute: OverviewLazyRoute,
  WaiterMonitorLazyRoute: WaiterMonitorLazyRoute,
  CashRegisterCloseLazyRoute: CashRegisterCloseLazyRoute,
  CloseBillCodeLazyRoute: CloseBillCodeLazyRoute,
  ProductsAddLazyRoute: ProductsAddLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
